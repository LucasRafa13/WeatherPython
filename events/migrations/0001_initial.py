# Generated by Django 4.2.13 on 2025-06-02 20:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sympla_id', models.CharField(help_text='ID único do evento na Sympla', max_length=255, unique=True)),
                ('name', models.CharField(help_text='Nome do evento', max_length=500)),
                ('start_date', models.DateTimeField(help_text='Data e hora de início do evento')),
                ('end_date', models.DateTimeField(blank=True, help_text='Data e hora de término do evento', null=True)),
                ('image_url', models.URLField(blank=True, help_text='URL da imagem do evento', max_length=1000, null=True)),
                ('category', models.CharField(blank=True, help_text='Categoria do evento', max_length=255, null=True)),
                ('producer', models.CharField(blank=True, help_text='Produtor do evento', max_length=255, null=True)),
                ('location', models.CharField(blank=True, help_text='Local do evento (Cidade, Estado, etc.)', max_length=500, null=True)),
                ('url', models.URLField(help_text='URL do evento na Sympla', max_length=1000)),
                ('published', models.BooleanField(default=True, help_text='Indica se o evento está publicado')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp de criação no banco de dados')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp da última atualização no banco de dados')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='Início da execução da integração')),
                ('end_time', models.DateTimeField(blank=True, help_text='Fim da execução da integração', null=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Sucesso'), ('FAILED', 'Falha'), ('RUNNING', 'Em Execução')], default='RUNNING', help_text='Status da execução da integração', max_length=50)),
                ('events_processed', models.IntegerField(default=0, help_text='Número de eventos processados')),
                ('new_events', models.IntegerField(default=0, help_text='Número de novos eventos criados')),
                ('updated_events', models.IntegerField(default=0, help_text='Número de eventos atualizados')),
                ('error_message', models.TextField(blank=True, help_text='Mensagem de erro, se houver', null=True)),
            ],
            options={
                'verbose_name': 'Execução de Integração',
                'verbose_name_plural': 'Execuções de Integração',
                'ordering': ['-start_time'],
            },
        ),
    ]
